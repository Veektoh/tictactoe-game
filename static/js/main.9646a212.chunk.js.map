{"version":3,"sources":["components/Square.js","utilis/Calculatewinner.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","_ref","value","onSquareClick","React","createElement","className","onClick","calculateWinner","square","lines","line","a","b","c","Board","xIsNext","squares","onPlay","handleClick","i","nextSquares","slice","winner","status","Game","history","setHistory","useState","Array","fill","currentMove","setCurrentMove","currentSquare","moves","map","move","description","concat","key","nextHistory","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9646a212.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.css\";\r\n\r\nfunction Square({ value, onSquareClick }) {\r\n  return (\r\n    <div>\r\n      <button className=\"square\" onClick={onSquareClick}>\r\n        {value}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","function calculateWinner(square) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (const line of lines) {\r\n    const [a, b, c] = line;\r\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\r\n      return square[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default calculateWinner;\r\n","import React from \"react\";\r\nimport \"./Board.css\";\r\nimport Square from \"./Square\";\r\nimport calculateWinner from \"../utilis/Calculatewinner.js\";\r\n\r\nfunction Board({ xIsNext, squares, onPlay }) {\r\n  function handleClick(i) {\r\n    if (squares[i] || calculateWinner(squares)) {\r\n      return;\r\n    }\r\n    const nextSquares = squares.slice();\r\n    if (xIsNext) {\r\n      nextSquares[i] = \"X\";\r\n    } else {\r\n      nextSquares[i] = \"O\";\r\n    }\r\n    onPlay(nextSquares);\r\n  }\r\n\r\n  const winner = calculateWinner(squares);\r\n  let status;\r\n  if (winner) {\r\n    status = \"Winner: \" + winner;\r\n  } else {\r\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"board-layout\">\r\n      <div className=\"status\">{status}</div>\r\n      <div className=\"board\">\r\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\r\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\r\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\r\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\r\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\r\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\r\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\r\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\r\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./game.css\";\r\n\r\nfunction Game() {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [currentMove, setCurrentMove] = useState(0);\r\n  const xIsNext = currentMove % 2 === 0;\r\n  const currentSquare = history[currentMove];\r\n\r\n  function handlePlay(nextSquares) {\r\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\r\n    setHistory(nextHistory);\r\n    setCurrentMove(nextHistory.length - 1);\r\n  }\r\n\r\n  function jumpTo(nextMove) {\r\n    setCurrentMove(nextMove);\r\n  }\r\n\r\n  const moves = history.map((squares, move) => {\r\n    let description;\r\n    if (move > 0) {\r\n      description = ` go to move ${move}`;\r\n    } else {\r\n      description = `Go to start game`;\r\n    }\r\n    return (\r\n      <li key={move}>\r\n        <button className=\"move-btn\" onClick={() => jumpTo(move)}>\r\n          {description}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"game-layout\">\r\n      <div>\r\n        <Board xIsNext={xIsNext} squares={currentSquare} onPlay={handlePlay} />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <ol className=\"move-list\">{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./components/Game\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}